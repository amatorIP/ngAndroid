package ${package};

public class ${className} {

    private ${scope.javaName} scope;

	public ${className}(${scope.javaName} scope){
        this.scope = scope;
    #foreach($model in $scope.ngModels)
        if(this.scope.${model.name} == null || !(this.scope.${model.name} instanceof com.ngandroid.lib.ng.Model)){
            this.scope.${model.name} = new ${model.typeName}$$NgModel();
        }
    #end
	}

	#foreach($model in $scope.ngModels)
	public ${model.typeName}$$NgModel get${model.name}() {
	    return (${model.typeName}$$NgModel) this.scope.${model.name};
	}
    #end

    #foreach ($layout in $scope.layouts)
    public Object ${layout.javaName}Execute(int viewId_, int attr_) {
        switch(viewId_){
            #foreach($view in $scope.getViews($layout))
                case ${packageName}.R.id.${view.id}:
                    #foreach($attr in $view.attributes)
                        #if( $foreach.count == 1)
                        if(attr == ${packageName}.R.styleable.ngAndroid_${attr.name}){
                        #else
                        else if(attr == ${packageName}.R.styleable.ngAndroid_${attr.name}){
                        #end
                            #if($attr.source.void)
                                ${attr.source.getterSource};
                                return null;
                            #else
                                return ${attr.source.setterSource};
                            #end
                        }
                    #end
                        else{
                            android.util.Log.w("${simpleClassName}", "view ${v.id} in layout ${mapEntry.key} does not have attribute " + attr);
                            return null;
                        }
            #end
            default:
               android.util.Log.w("${simpleClassName}", "View " + Integer.toHexString(viewId_) + " in layout '${layout.name}' does not have any ngAttributes");
               return null;
        }
    }
    #end
}
package ${packageName};

import android.view.View;
import android.widget.*;

public class ${simpleClassName}$$NgScope <T extends ${fullName}> implements com.ngandroid.lib.ng.Scope {

	private T scope;
	private com.ngandroid.lib.NgAndroid ngandroid_;

	public ${simpleClassName}$$NgScope(T scope, com.ngandroid.lib.NgAndroid ngandroid){
		this.scope = scope;
		this.ngandroid_ = ngandroid;
		#foreach($field in $fields)
		    if(this.scope.${field.name} == null || !(this.scope.${field.name} instanceof com.ngandroid.lib.ng.Model)){
                this.scope.${field.name} = new ${field.typeName}$$NgModel();
            }
        #end
	}

	public Object execute(int layoutId, int viewId, int attr){
	    switch(layoutId){
            #foreach ($mapEntry in $layouts.entrySet())
                case ${manifestPackageName}.R.layout.${mapEntry.key}:{
                    switch(viewId){
                        #foreach($v in $mapEntry.value)
                            case ${manifestPackageName}.R.id.${v.id}:
                                #foreach($attr in $v.attributes)
                                    #if( $foreach.count == 1)
                                    if(attr == ${manifestPackageName}.R.styleable.ngAndroid_${attr.name}){
                                    #else
                                    else if(attr == ${manifestPackageName}.R.styleable.ngAndroid_${attr.name}){
                                    #end
                                        #if($attr.source.void)
                                            ${attr.source.getterSource};
                                            return null;
                                        #else
                                            return ${attr.source.setterSource};
                                        #end
                                    }
                                #end
                                    else{
                                        android.util.Log.w("${simpleClassName}", "view ${v.id} in layout ${mapEntry.key} does not have attribute " + attr);
                                        return null;
                                    }
                        #end
                        default:
                           android.util.Log.w("${simpleClassName}", "View " + Integer.toHexString(layoutId) + " in layout " + Integer.toHexString(layoutId) + " does not have any ngAttributes");
                           return null;
                    }
                }
            #end
            default:{
                android.util.Log.w("${simpleClassName}", "${simpleClassName} does not match layout " + Integer.toHexString(layoutId));
                return null;
            }
        }
	}

	public <T> void setModelValue(String model, String field, T value){
        switch(model){
            #foreach($field in $fields)
                case "${field.name}":
                    ((com.ngandroid.lib.ng.Model) scope.${field.name}).setValue(field, value);
            #end
        }
        throw new com.ngandroid.lib.exceptions.NgException("Field '" + model + "' was not found in ${simpleClassName}");
	}

	public <T> T getModelValue(String model, String field){
	    switch(model){
            #foreach($field in $fields)
                case "${field.name}":
                    return (T) ((com.ngandroid.lib.ng.Model) scope.${field.name}).getValue(field);
            #end
        }
        throw new com.ngandroid.lib.exceptions.NgException("Field '" + model + "' was not found in ${simpleClassName}");
	}

	public com.ngandroid.lib.ng.Model getModel(String model){
		switch(model){
		    #foreach($field in $fields)
		        case "${field.name}":
		            return (com.ngandroid.lib.ng.Model) scope.${field.name};
            #end
		}
		throw new com.ngandroid.lib.exceptions.NgException("Field '" + model + "' was not found in ${simpleClassName}");
	}
}
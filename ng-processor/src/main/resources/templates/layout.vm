package ${package};

import android.view.View;
import android.widget.*;

public class ${className} implements com.ngandroid.lib.ng.Layout {

	#foreach($scope in $scopes)
	    private $scope.typeName $scope.name;
	#end
	private com.ngandroid.lib.NgAndroid ngandroid_;

	public ${className}(com.ngandroid.lib.NgAndroid ngandroid#foreach($scope in $scopes), $scope.typeName $scope.name #end){
		this.ngandroid_ = ngandroid;
		#foreach($scope in $scopes)
            this.$scope.name = $scope.name;
            #foreach($model in $scope.ngModels)
                if(this.${scope.name}.${model.name} == null || !(this.${scope.name}.${model.name} instanceof com.ngandroid.lib.ng.Model)){
                    this.${scope.name}.${model.name} = new ${model.typeName}$$NgModel();
                }
            #end
        #end
	}

	public int getId() {
	    return ${packageName}.R.layout.${layoutName};
	}

	public void attach(android.view.View __view__){
        #foreach($scope in $scopes)
            #foreach($view in $scope.getViews($layoutPath))
                $view.elementType $view.id = ($view.elementType) __view__.findViewById(${packageName}.R.id.${view.id});
                #foreach($attr in $view.attributes)
                    ##set( $models = $attr.modelSource )
                    ##ngandroid_.attach(
                    ##    ${manifestPackageName}.R.styleable.ngAndroid_${attr.name},
                    ##    this,
                    ##    ${v.id},
                    ##    ${manifestPackageName}.R.layout.${mapEntry.key},
                    ##    ${manifestPackageName}.R.id.${v.id}
                    ##    #foreach($model in $models)
                    ##        ,com.ngandroid.lib.utils.Tuple.of("${model.modelName}","${model.fieldName}")
                    ##    #end
                    ##);
                #end
            #end
        #end
	}

	public Object execute(int viewId, int attr){
        switch(viewId){
            #foreach($scope in $scopes)
                #foreach($view in $scope.getViews($layoutPath))
                    case ${packageName}.R.id.${view.id}:
                        #foreach($attr in $view.attributes)
                            #if( $foreach.count == 1)
                            if(attr == ${packageName}.R.styleable.ngAndroid_${attr.name}){
                            #else
                            else if(attr == ${packageName}.R.styleable.ngAndroid_${attr.name}){
                            #end
                                #if($attr.source.void)
                                    ${scope.name}.${attr.source.setterSource};
                                    return null;
                                #else
                                    return ${scope.name}.${attr.source.getterSource};
                                #end
                            }
                        #end
                            else{
                                android.util.Log.w("${simpleClassName}", "view ${v.id} in layout ${mapEntry.key} does not have attribute " + attr);
                                return null;
                            }
                #end
            #end
            default:
               android.util.Log.w("${className}", "View " + Integer.toHexString(viewId) + " in layout " + Integer.toHexString(getId()) + " does not have any ngAttributes");
               return null;
        }
	}
}
package ${package};

import android.view.View;
import android.widget.*;

public class ${className} implements com.ngandroid.lib.ng.Layout {

    private com.ngandroid.lib.NgAndroid ngandroid_;
	#foreach($scope in $scopes)
	    private ${scope.typeName}$$NgScope $scope.name;
	#end

	public ${className}(com.ngandroid.lib.NgAndroid ngandroid#foreach($scope in $scopes), $scope.typeName $scope.name #end){
		this.ngandroid_ = ngandroid;
		#foreach($scope in $scopes)
            this.$scope.name = new ${scope.typeName}$$NgScope($scope.name);
        #end
	}

	public int getId() {
	    return ${packageName}.R.layout.${layoutName};
	}

	public void attach(android.view.View __view__){
        #foreach($scope in $scopes)
            #foreach($view in $scope.getViews($layoutPath))
                /*$view.elementType*/ android.view.View $view.id = /*($view.elementType)*/ __view__.findViewById(${packageName}.R.id.${view.id});
                #foreach($attr in $view.attributes)
                    #set ($attrSource = $attr.source)
                    #set ($attrClassName = $attr.className)
                    #set ($viewName = $view.id)
                    #evaluate ( ${attr.attachSource} )
                #end
            #end
        #end
	}

	public Object execute(int viewId, int attr){
        switch(viewId){
            #foreach($scope in $scopes)
                #foreach($view in $scope.getViews($layoutPath))
                    case ${packageName}.R.id.${view.id}:
                        #foreach($attr in $view.attributes)
                            #if( $foreach.count == 1)
                            if(attr == ${packageName}.R.styleable.ngAndroid_${attr.name}){
                            #else
                            else if(attr == ${packageName}.R.styleable.ngAndroid_${attr.name}){
                            #end
                                #if($attr.source.void)
                                    ${scope.name}.${attr.source.setterSource};
                                    return null;
                                #else
                                    return ${scope.name}.${attr.source.getterSource};
                                #end
                            }
                        #end
                            else{
                                android.util.Log.w("${className}", "view ${view.id} does not have attribute " + attr);
                                return null;
                            }
                #end
            #end
            default:
               android.util.Log.w("${className}", "View " + Integer.toHexString(viewId) + " in layout '${layoutName}' does not have any ngAttributes");
               return null;
        }
	}

	#foreach($scope in $scopes)
        #foreach($view in $scope.getViews($layoutPath))
            #foreach($attr in $view.attributes)
                #set ($attrSource = $attr.source)
                #set ($attrClassName = $attr.className)
                #set ($viewType = $view.elementType)
                #set ($type = ${attr.source.getType($scope)})
                #set ($boolType = false)
                #evaluate ( ${attr.classSource} )
            #end
        #end
    #end
}